{% extends "projects/base.html" %}
{% set active_link = "stats" %}
{% import "privacy/locked.html" as privacy %}

{% block projectcontent %}
<!-- Leaflet maps -->
<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.4/leaflet.css" />
 <!--[if lte IE 8]>
     <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.4/leaflet.ie.css" />
 <![endif]-->
<!-- Default Style -->
<script src="http://cdn.leafletjs.com/leaflet-0.4/leaflet.js"></script>
<link href="{{url_for('static', filename='css/stats/MarkerCluster.css')}}" rel="stylesheet" type="text/css">
<link href="{{url_for('static', filename='css/stats/MarkerCluster.Default.css')}}" rel="stylesheet" type="text/css">
<script src="http://cdn.leafletjs.com/leaflet-0.4/leaflet.js"></script>
<script src="{{url_for('static', filename='js/stats/flotr2.min.js')}}" type="text/javascript"></script>
<script src="{{url_for('static', filename='js/stats/leaflet.markercluster.js')}}" type="text/javascript"></script>
<script>
    var projectStats = {{projectStats|safe}};
</script>
        {% if enforce_privacy and (current_user.is_anonymous or (current_user.is_authenticated and not current_user.admin)) %}
        {{ privacy.render_lock_page() }}
        {% else %}
        <br/>

            {% if private %}
            <div class="row">
                <div class="alert alert-info">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <strong>{{_('Important')}}:</strong> {{_('Data have been')}} <strong>{{_('anonymized')}}!</strong>
                </div>
            </div>
            {% endif %}

            <div id="card" class="row">
                <div class="col-md-12">
					<h2>진행률 : {{progress_rate}}%</h2>
					<h5 id="project_percent"></h5>
                    <h2>작업 당 평균 시간:</h2>
                    <p><span id="avgTime">{{ avg_contrib_time }}</span> {{ _('seconds') }}</p>
                </div>
            </div>
			
            <!-- Hour Stats CARD -->
			<div id="card" class="row"> {# 시간당 정답 분포 #}
                <div class="col-md-12">
                    <h2>최근 2주간 시간대별 답변 분포</h2>
                    <div id="hourStats" style="margin:0;height:500px;">
                    </div>
                    <script>
                    (function(){
                    function answersPerHour(obj) {
                        return (parseInt(obj.y) + " answers were submitted at " + parseInt(obj.x) + " hours");
                    }

                    function hours(obj) {
                        return (parseInt(obj) + ":00");
                    }
                    var container = document.getElementById('hourStats');
                    var graph = Flotr.draw(container, [{data: projectStats.hourStats[1]['values'], label:projectStats.hourStats[1]['label']},{ data:projectStats.hourStats[2]['values'],label:projectStats.hourStats[2]['label'] }], {
                        bubbles : {show: true, baseRadius:5},
                        xaxis   : {min: 0, max:24, tickFormatter: hours},
                        yaxis   : {min: 0, max:_.max(projectStats.hourStats[0]), tickDecimals: 0 },
                        mouse   : {track: true, trackFormatter: answersPerHour},
                        HtmlText: false,
                        legend  : {postion: 'nw'}
                    });
                    })();
                    </script>
                </div>
            </div>
            <!-- END Hour Stats CARD -->

            <!-- Day Stats CARD -->
            <div id="card" class="row">
                <div  class="col-md-12">
                    <h2>일별 진행률</h2>
                    <p>{{_('select an area to zoom, click to reset the chart')}}</p>
                    <div id="dayStats" style="margin:0;height:500px;"></div>
                    <script>
                    (function(){
                    function date(obj) {
                        var d = new Date(parseInt( obj ));
                        var year = d.getFullYear();
                        var month = d.getMonth() + 1;
                        var day = d.getDate();
                        return(year + "-" + month + '-' + day)
                    }
                    function answersPerDay(obj) {
                        //return (parseInt(obj.y) + "  " + date(obj.x));
						return (date(obj.x) + " 진행률 : " + parseInt(obj.y) + "%");
                    }
                    var options = {
                        xaxis   : {mode:'time', title:'날짜'},
                        yaxis   : {min: 0, max: 105, tickDecimals: null, title:'%', titleAngle: 180},
                        mouse   : {track: true, trackFormatter: answersPerDay, radius: 3},
                        HtmlText: false,
                        legend  : {postion: 'nw'},
                        selection: {
                            mode: 'xy',
                            fps: 1
                        }
                    };

                    var dayStatsContainer = document.getElementById('dayStats');

                    function drawGraph(opts) {
                        // Clone the options, so the 'options' variable always keeps intact.
                        var o = Flotr._.extend(Flotr._.clone(options), opts || {});
                        
                        // Return a new graph.
                        return Flotr.draw(
                        //dayStatsContainer, [{data: projectStats.dayStats[1]['values'], label:projectStats.dayStats[1]['label']},{ data:projectStats.dayStats[2]['values'],label:projectStats.dayStats[2]['label'] }, { data:projectStats.dayStats[0]['values'],label:projectStats.dayStats[0]['label']} ], o);
                        dayStatsContainer, [{ data:projectStats.dayStats[3]['values'],label:projectStats.dayStats[3]['label']} ], o);
                    }
                        
                        // Actually draw the graph.
                        graph = drawGraph();
                        
                        // Hook into the 'flotr:select' event.
                        Flotr.EventAdapter.observe(dayStatsContainer, 'flotr:select', function(area) {
                        
                            // Draw graph with new area
                            graph = drawGraph({
                                xaxis: {
                                    mode: 'time',
                                    min: area.x1,
                                    max: area.x2
                                },
                                yaxis: {
                                    min: area.y1,
                                    max: area.y2
                                }
                            });
                        });

                        // When graph is clicked, draw the graph with default area.
                        Flotr.EventAdapter.observe(dayStatsContainer, 'flotr:click', function() {
                            drawGraph();
                        });
                    })();
                    </script>
                </div>
            </div>
            <!-- END Day Stats CARD -->

            {%endif%}
        </div>
</div>
<script type="text/javascript">
(function() {
    var time = document.getElementById('avgTime');
    try {
        var localTime = time.innerHTML;
        var locale = navigator.languages ? navigator.languages[0] : navigator.language;
        var localTime = parseFloat(time.innerHTML).toLocaleString(locale);
        time.innerHTML = localTime;
    }
    catch (e) {
        console.log("Unable to convert to local string.");
    }
})();
</script>
{{ helper.broken_image() }}
{% endblock %}
