{% extends "base.html" %}
{% set active_page = "point" %}
{% set active_link = "point" %}
{% import "account/_helpers.html" as helper %}
{% import "projects/_helpers.html" as project_helper %}
{% import "account/user_pref_metadata.html" as user_pref_metadata %}

{% block content %}
<section class="account point">
    <div class="container">

		<div class="col-sm-3 col-md-3">
			{{ helper.render_account_local_nav(current_user, active_link) }}
        </div>
       	<div class="col-sm-9 col-md-9">
			<h2>환전요청</h2>
        </div>
		{#	<div class="col-sm-9 col-md-9">
			<div class="table-responsive">
				<table class="table table-hover">
					<caption><h3>== MANAGE EXCHANGE ==</h3></caption>
					<thead>
						<tr style="background-color:lightgray">
							<th>날짜</th>
							<th>user</th>
							<th>예금주</th>
							<th>은행</th>
							<th>계좌번호</th>
							<th>포인트</th>
							<th>수락</th>
							<th>반대</th>
						</tr>
					</thead>
					<tbody>
						{% for m_e in manage_exchange %}
						<tr style="cursor:pointer;" onclick = "location.href='{{url_for('project.details', short_name = p_h.project_short_name)}}'">
							<td>{{ m_d.created }}</td>
							<td>{{ m_d.name }}</td>
							<td>{{ m_d.req_name }}</td>
							<td>{{ m_d.bank }}</td>
							<td>{{ m_d.account_number }}</td>
							<td>{{ m_d.point }}</td>
							<td>"aaa"</td>
							<td>"bbb"</td>
						</tr>
						{% endif %}
						{% endfor %}
					</tbody>
				</table>
			</div>


			<div class="dropdown">
				<button onclick="category()" class="dropbtn">내용 검색</button>
				<div id="myDropdown" class="dropdown-content">
					<input type="text" placeholder="Search.." id="myInput" onkeyup="filterCategory()">
					{% for p_h in point_hist %}
					<a>&lt;{{ p_h.category }}&gt;</a>
					{% endfor %}
					<a>&lt;환급&gt;</a>
				</div>
			</div>






			<div>
				<p>TEST_TABLE_SORT</p>
				<p><button onclick="sortTable()">Sort</button></p>
				<table id="myTable">
					<thead>
						<tr>
							<th onclick="sortTable(0)">TEST</th>
						</tr>
					</thead>
					<tbody>
						<tr><td>11</td> </tr>
						<tr><td>2</td> </tr>
						<tr><td>84</td> </tr>
						<tr><td>34</td> </tr>
						<tr><td>96</td> </tr>
						<tr><td>311</td> </tr>
						<tr><td>64</td> </tr>
						<tr><td>80345</td> </tr>
					</tbody>
				</table>
			</div>
		</div>#}
</section>
<style>
	table {
		border-spacing: 0;
		width: 100%;
		border: 1px solid #ddd;
	}

	th {
		cursor: pointer;
	}

	th, td {
		text-align: left;
		padding: 16px;
	}

	tr:nth-child(even) {
		background-color: #f2f2f2
	}
	.dropbtn {
		background-color: #4CAF50;
		color: white;
		padding: 16px;
		font-size: 16px;
		border: none;
		cursor: pointer;
	}

	.dropbtn:hover, .dropbtn:focus {
		background-color: #3e8e41;
	}

	#myInput {
		box-sizing: border-box;
		background-image: url('searchicon.png');
		background-position: 14px 12px;
		background-repeat: no-repeat;
		font-size: 16px;
		padding: 14px 20px 12px 45px;
		border: none;
		border-bottom: 1px solid #ddd;
	}

	#myInput:focus {outline: 3px solid #ddd;}

	.dropdown {
		position: relative;
		display: inline-block;
	}

	.dropdown-content {
		display: none;
		position: absolute;
		background-color: #f6f6f6;
		min-width: 230px;
		overflow: auto;
		border: 1px solid #ddd;
		z-index: 1;
	}

	.dropdown-content a {
		color: black;
		padding: 12px 16px;
		text-decoration: none;
		display: block;
	}

	.dropdown a:hover {background-color: #ddd;}

	.show {display: block;}

</style>

	<script>
		/* When the user clicks on the button,
		toggle between hiding and showing the dropdown content */
function category() {
	  document.getElementById("myDropdown").classList.toggle("show");
}

function filterCategory() {
	  var input, filter, ul, li, a, i;
	  input = document.getElementById("myInput");
	  filter = input.value.toUpperCase();
	  div = document.getElementById("myDropdown");
	  a = div.getElementsByTagName("a");
	  for (i = 0; i < a.length; i++) {
		      txtValue = a[i].textContent || a[i].innerText;
		      if (txtValue.toUpperCase().indexOf(filter) > -1) {
				        a[i].style.display = "";
				      } else {
						        a[i].style.display = "none";
						      }
		    }
}
	</script>

{#	<script> /*테이블 소팅 테스트 */
	function sortTable() {
		var table, rows, switching, i, x, y, shouldSwitch;
		table = document.getElementById("myTable");
		switching = true;
		/*Make a loop that will continue until
				  no switching has been done:*/
		while (switching) {
			//start by saying: no switching is done:
			switching = false;
			rows = table.rows;
			/*Loop through all table rows (except the
								  first, which contains table headers):*/
			for (i = 1; i < (rows.length - 1); i++) {
				//start by saying there should be no switching:
				shouldSwitch = false;
				/*Get the two elements you want to compare,
													one from current row and one from the next:*/
				x = rows[i].getElementsByTagName("TD")[0];
				y = rows[i + 1].getElementsByTagName("TD")[0];
				//check if the two rows should switch place:
				if (Number(x.innerHTML.toLowerCase()) > Number(y.innerHTML.toLowerCase())) {		/* Number(변수) 를 삭제하면 String으로 구분, ex ) 11<5*/
					//if so, mark as a switch and break the loop:
					shouldSwitch = true;
					break;
				}
			}
			if (shouldSwitch) {
				/*If a switch has been marked, make the switch
										and mark that a switch has been done:*/
				rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
				switching = true;
			}
		}
	}
</script> #}
<script>
	function sortTable(n) {
		var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
		table = document.getElementById("myTable");
		switching = true;
		//Set the sorting direction to ascending:
		dir = "asc"; 
		/*Make a loop that will continue until
		  no switching has been done:*/
		while (switching) {
			//start by saying: no switching is done:
			switching = false;
			rows = table.rows;
			/*Loop through all table rows (except the
			  first, which contains table headers):*/
			for (i = 1; i < (rows.length - 1); i++) {
				//start by saying there should be no switching:
				shouldSwitch = false;
				/*Get the two elements you want to compare,
				  one from current row and one from the next:*/
				x = rows[i].getElementsByTagName("TD")[n];
				y = rows[i + 1].getElementsByTagName("TD")[n];
				/*check if the two rows should switch place,
				  based on the direction, asc or desc:*/
				if (dir == "asc") {
					if  (Number(x.innerHTML.toLowerCase()) > Number(y.innerHTML.toLowerCase())) {
						//if so, mark as a switch and break the loop:
						shouldSwitch= true;
						break;
					}
				} else if (dir == "desc") {
					if (Number(x.innerHTML.toLowerCase()) <Number( y.innerHTML.toLowerCase())) {
						//if so, mark as a switch and break the loop:
						shouldSwitch = true;
						break;
					}
				}
			}
			if (shouldSwitch) {
				/*If a switch has been marked, make the switch
				  and mark that a switch has been done:*/
				rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
				switching = true;
				//Each time a switch is done, increase this count by 1:
				switchcount ++;      
			} else {
				/*If no switching has been done AND the direction is "asc",
				  set the direction to "desc" and run the while loop again.*/
				if (switchcount == 0 && dir == "asc") {
					dir = "desc";
					switching = true;
				}
			}
		}
	}
</script>


{% endblock %}
{% block extrajs %}
{% include "account/js/metadata.js" %}
{% endblock %}
